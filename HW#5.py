import random
import names

import randomtimestamp
import username_generator

# 1.Написать скрипт который в создаст список целых чисел:
list_all = list(range(70))

# 2. Написать скрипт который в создаст список целых чётных чисел:
list_even = list(range(0, 140, 2))

# 3. Написать скрипт который в создаст список целых нечётных чисел:
list_odd = list(range(1, 140, 2))

# 4. Написать скрипт который из списка целых чисел выведет чётные числа:
for item in list_all:
    if item % 2 == 0:
        print("Четные числа списка целых чисел:", item)
print("=================================================================================================================================================================================================================================================================")

# 5. Написать скрипт который из списка целых чисел выведет нечётные числа:
for item in list_all:
    if item % 2 != 0:
        print("Нечетные числа списка целых чисел:", item)

# 6. Написать скрипт который из списка целых чисел выведет чётные числа которые делятся на 5 без остатка.
for item in list_all:
    if item % 2 == 0 and item % 5 == 0:
        print("Четные числа списка целых чисел кратные 5:", item)
print("=================================================================================================================================================================================================================================================================")

# 7. Написать скрипт который из списка целых чисел выведет количество чётных чисел которые делятся на 5 без остатка.
i = 0
for item in list_all:
    if item % 2 == 0 and item % 5 == 0:
        i += 1
print("Количество чётных списка целых чисел кратных 5 =", i)
print("=================================================================================================================================================================================================================================================================")

# 8. Написать скрипт который в создаст список целых рандомных чисел.
list_rand = random.sample(range(0, 100), 70)


# 9. Написать функцию которая, получив на вход любой из выше созданных списков, разобьёт его списки по 5 элементов.
def separate(list):
    i = 0
    list1 = []
    while i < len(list):
        list1.append(list[i:i + 5])
        i += 5
    return list1


check = separate(list_all)
print(check)
print("=================================================================================================================================================================================================================================================================")


# 10. Написать функцию которая, получив на вход список целых чисел, вернёт 2 списка,
# список чётных и список нечётных чисел.
def divider(list):
    list1 = []
    list2 = []
    for i in list:
        if list[i] % 2 == 0:
            list2.append(list[i])
        else:
            list1.append(list[i])
    return list1, list2


check1, check2 = divider(list_all)
print('Список нечетных чисел', check1)
print('Список четных чисел', check2)
print("=================================================================================================================================================================================================================================================================")

# 11. Написать скрипт который сгенерирует список под названием 5_stars из списков по 5 элементов целых чисел.

stars_5 = [[random.randint(0, 50) for i in range(5)] for j in range(5)]
print('stars_5', stars_5)
print("=================================================================================================================================================================================================================================================================")

# 12. Написать скрипт который выведет список из сумм каждого внутреннего списка из  5_stars
stars_5_summa = []
for i in range(len(stars_5)):
    summa = 0
    for j in range(5):
        summa += stars_5[i][j]
    stars_5_summa.append(summa)
print("stars_5_summa ", stars_5_summa)
print("=================================================================================================================================================================================================================================================================")


# 13. Написать функцию которая на вход получает список 5_stars, а вернёт 2 списка.
# В одном списке внутренние списки из 5_stars сумма чисел которых >= 100, а другой
# сумма чисел которых < 100. Если какого-то списка не получится, то вместо него вернуть текст "No lists"

def summ_divider(list):
    list_less100 = []
    list_more100 = []
    for i in range(len(list)):
        summa = 0
        for j in range(5):
            summa += stars_5[i][j]
        if summa >= 100:
            list_more100.append(list[i])
        else:
            list_less100.append(list[i])
    if len(list_less100) == 0:
        list_less100 = "No lists"
    if len(list_more100) == 0:
        list_more100 = "No lists"
    return list_less100, list_more100


Check_less100 = []
Check_more100 = []
Check_less100, Check_more100 = summ_divider(stars_5)
print('Список с суммой элементов менее 100 = ', Check_less100)
print('Список с суммой элементов более либо равной 100 = ', Check_more100)
print("=================================================================================================================================================================================================================================================================")


# 14. Написать функцию которая получив на вход ваш возраст, выведет вам через какой срок вы сумеете
# отложить 10 000$, 20 000$, 30 000$, 50 000$, 100 000$ в кубышку.
def kubishka(age):
    if age < 10:
        k = 10
    elif 10 <= age < 20:
        k = 5
    elif 20 <= age < 30:
        k = 3
    elif 30 <= age < 40:
        k = 2
    else:
        k = 4
    print('Вы сможете отложить 10 000$ через', round(k * 12, 1), 'месяца/месяцев')
    print('Вы сможете отложить 30 000$ через', round(k * 1.25 * 12, 1), 'месяца/месяцев')
    print('Вы сможете отложить 40 000$ через', round(k * 1.5 * 12, 1), 'месяца/месяцев')
    print('Вы сможете отложить 50 000$ через', round(k * 1.6 * 12, 1), 'месяца/месяцев')
    print('Вы сможете отложить 100 000$ через', round(k * 2 * 12, 1), 'месяца/месяцев')


kubishka(29)
print("=================================================================================================================================================================================================================================================================")


# 15. Написать функцию которая получив на вход стартовую ЗП Junior QA и количество лет стажа выведет
# в консоль прогресс роста ЗП по каждому году из введенного количества лет стажа. Внутри функция учитывает
# дорожную карту развития скилов QA и список, полезных для компании, активностей которые может делать QA.
# Free implementation of function body logic
def progress(salary, experience):
    theory = 1.1
    sql = 1.1
    documentation = 1.1
    postman = 1.1
    python = 1.1
    javascript = 1.1
    reliability = 1.1
    soft_skills = 1.05
    management = 1.1
    english = 1.2
    jmeter = 1.05
    mobile = 1.09
    comunicate_with_owners = 1.2
    training_of_new_specialists = 1.3
    # Первый год
    if experience > 0:
        salary = salary * theory * sql * english + 200
        print("Зарплата через год = ", round(salary, 2))
        experience -= 1
        # Второй год
        if experience > 0:
            salary = salary * documentation * postman * jmeter * mobile * javascript
            print("Зарплата через 2 года = ", round(salary, 2))
            experience -= 1
            # Третий год
            if experience > 0:
                salary = salary * python * reliability * management * soft_skills
                print("Зарплата через 3 года = ", round(salary, 2))
                experience -= 1
                # Четвертый год
                if experience > 0:
                    salary = salary * comunicate_with_owners * training_of_new_specialists * (english + 0.2)
                    print("Зарплата через 4 года = ", round(salary, 2))
                    experience -= 1
                    # Пятый и последующие года
                    i = 5
                    while experience > 0:
                        salary *= 1.2
                        print('Зарплата через', i, 'лет = ', round(salary, 2))
                        experience -= 1
                        i += 1


progress(400, 8)
print("=================================================================================================================================================================================================================================================================")

# 16. Написать скрипт который сгенерирует список имён пользователей. Список имён вывести в консоль.
list_names = []
for i in range(20):
    list_names.append(names.get_first_name())
print("Список имен пользователей", list_names)
print("=================================================================================================================================================================================================================================================================")

# 17. Написать скрипт который сгенерирует список имён файлов. К каждому имени файла надо прикрепить номер итерации
# цикла как порядковый номер
list_names_1 = []
for i in range(20):
    list_names_1.append(str(i) + '_' + names.get_first_name())
print("Список имен пользователей с индексом", list_names_1)
print("=================================================================================================================================================================================================================================================================")

# 18.Написать скрипт который сгенерирует список списков. Каждый элемент списка это список в котором
# 0-й элемент - это имя пользователя, а 1-й - элемент это дата регистрации.
list_name_date = []
for i in range(10):
    list_name_date.append([names.get_first_name(), randomtimestamp.random_date(text=True)])
print("Список имен пользователей с датой регистрации", list_name_date)
print("=================================================================================================================================================================================================================================================================")

# 19. Написать скрипт который сгенерирует список Employees списков . Каждый элемент списка - это список в котором:
# 0-й - элемент - это имя пользователя,
# 1-й - элемент - это логин,
# 2-й - элемент - это пароль,
# 3-й - элемент - это email (email тоже генерировать),
# 4-й - элемент - это дата регистрации
Employees = []
for i in range(10):
    Employees.append(
        [username_generator.get_uname(4, 10, True), username_generator.get_uname(4, 10, True),
         username_generator.get_uname(6, 12, True),
         str(username_generator.get_uname(4, 10, True)) + "@gmail.com", randomtimestamp.random_date(text=True)])
print("Список работников", Employees)
print("=================================================================================================================================================================================================================================================================")

# 20. Написать скрипт который сгенерирует список family списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - семейный статус (True, False - генерировать рандомно),
family = []
for i in range(10):
    family.append([Employees[i][1], names.get_first_name(), random.choice([True, False])])
print("Список family", family)
print("=================================================================================================================================================================================================================================================================")
# 21. Написать скрипт который сгенерирует список gender списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - гендер (1-м, 0-ж)
gender = []
for i in range(10):
    gender.append([family[i][0], family[i][1], random.choice([1, 0])])
print("Список gender", gender)
print("=================================================================================================================================================================================================================================================================")
# 22. Написать скрипт который сгенерирует список salary списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - зарплата (генерироовать от 300$ до 5000$)
salary = []
for i in range(10):
    salary.append([gender[i][0], gender[i][1], random.randint(300, 5000)])
print("Список salary", salary)
print("=================================================================================================================================================================================================================================================================")

# 23. Написать скрипт который создаст список имён работников из salary у которых ЗП от 1500$ до 3000$
rich_list = []
for i in range(len(salary)):
    if 1500 < salary[i][2] < 3000:
        rich_list.append(salary[i][1])
print("Список rich_list", rich_list)
print("=================================================================================================================================================================================================================================================================")

# 24. Написать скрипт который создаст список имён мужчин из gender.
man_names = []
for i in range(len(gender)):
    if gender[i][2] == 1:
        man_names.append(gender[i][1])
print("Список man_names", man_names)
print("=================================================================================================================================================================================================================================================================")

# 25. Написать скрипт который создаст список имён женщин из gender.
female_names = []
for i in range(len(gender)):
    if gender[i][2] == 0:
        female_names.append(gender[i][1])
print("Список female_names", female_names)
print("=================================================================================================================================================================================================================================================================")

# 26. Написать скрипт который создаст список имён неженатых мужчин из family.
unmarried_man = []
for i in range(len(family)):
    if not family[i][2] and gender[i][2] == 1:
        unmarried_man.append(family[i][1])
print("Список unmarried_man", unmarried_man)
print(
    "=================================================================================================================================================================================================================================================================")

# 27. Написать скрипт который создаст список имён незамужних женщин из family.
unmarried_female = []
for i in range(len(family)):
    if not family[i][2]:
        unmarried_female.append(family[i][1])
for i in unmarried_man:
    unmarried_female.remove(i)
print("Список unmarried_female", unmarried_female)
print(
    "=================================================================================================================================================================================================================================================================")

#
# 28. Написать скрипт который создаст список имён неженатых мужчин с ЗП больше или равной 1500$.
# Используйте Employees, family, gender, salary. Реализуйте как скрипт, без функций
last_list = []
for i in range(10):
    if not family[i][2] and gender[i][2] == 1 and salary[i][2] >= 1500:
        last_list.append(family[i][1])
print("Список имён неженатых мужчин с ЗП больше или равной 1500$", last_list)
print("=================================================================================================================================================================================================================================================================")


# 29. Реализуйте пункт 28 через через функции.
def last_function(list_f, list_g, list_s):
    list_ret = []
    for i in range(len(list_f)):
        if not list_f[i][2] and list_g[i][2] == 1 and list_s[i][2] >= 1500:
            list_ret.append(family[i][1])
    return list_ret


print("Список имён неженатых мужчин с ЗП больше или равной 1500$ (функция)", last_function(family, gender, salary))
